{"version":3,"file":"overlay-container.d.ts","sources":["c:/Users/HP/Desktop/B2B/b2b-portal/node_modules/@angular/cdk/overlay/typings/overlay-container.d.ts"],"sourcesContent":["import { InjectionToken, OnDestroy, Optional } from '@angular/core';\n/** Container inside which all overlays will render. */\nexport declare class OverlayContainer implements OnDestroy {\n    protected _document: any;\n    protected _containerElement: HTMLElement;\n    constructor(_document: any);\n    ngOnDestroy(): void;\n    /**\n     * This method returns the overlay container element. It will lazily\n     * create the element the first time  it is called to facilitate using\n     * the container in non-browser environments.\n     * @returns the container element\n     */\n    getContainerElement(): HTMLElement;\n    /**\n     * Create the overlay container element, which is simply a div\n     * with the 'cdk-overlay-container' class on the document body.\n     */\n    protected _createContainer(): void;\n}\n/** @docs-private @deprecated @breaking-change 7.0.0 */\nexport declare function OVERLAY_CONTAINER_PROVIDER_FACTORY(parentContainer: OverlayContainer, _document: any): OverlayContainer;\n/** @docs-private @deprecated @breaking-change 7.0.0 */\nexport declare const OVERLAY_CONTAINER_PROVIDER: {\n    provide: typeof OverlayContainer;\n    deps: (Optional[] | InjectionToken<any>)[];\n    useFactory: typeof OVERLAY_CONTAINER_PROVIDER_FACTORY;\n};\n"],"names":[],"mappings":"AAAA;;;AAEA;;;;;;;;;;;;;;;;;;AAiBA;;;;;;;;;"}