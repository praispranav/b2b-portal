/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
import { NgModule } from '@angular/core';
import { COMMON_DIRECTIVES } from './directives/index';
import { DEPRECATED_PLURAL_FN, NgLocaleLocalization, NgLocalization, getPluralCase } from './i18n/localization';
import { COMMON_DEPRECATED_I18N_PIPES } from './pipes/deprecated/index';
import { COMMON_PIPES } from './pipes/index';
// Note: This does not contain the location providers,
// as they need some platform specific implementations to work.
/**
 * Exports all the basic Angular directives and pipes,
 * such as `NgIf`, `NgForOf`, `DecimalPipe`, and so on.
 * Re-exported by `BrowserModule`, which is included automatically in the root
 * `AppModule` when you create a new app with the CLI `new` command.
 *
 * * The `providers` options configure the NgModule's injector to provide
 * localization dependencies to members.
 * * The `exports` options make the declared directives and pipes available for import
 * by other NgModules.
 *
 * \@publicApi
 */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './directives/ng_class';
import * as ɵngcc2 from './directives/ng_component_outlet';
import * as ɵngcc3 from './directives/ng_for_of';
import * as ɵngcc4 from './directives/ng_if';
import * as ɵngcc5 from './directives/ng_template_outlet';
import * as ɵngcc6 from './directives/ng_style';
import * as ɵngcc7 from './directives/ng_switch';
import * as ɵngcc8 from './directives/ng_plural';
import * as ɵngcc9 from './pipes/async_pipe';
import * as ɵngcc10 from './pipes/case_conversion_pipes';
import * as ɵngcc11 from './pipes/json_pipe';
import * as ɵngcc12 from './pipes/slice_pipe';
import * as ɵngcc13 from './pipes/number_pipe';
import * as ɵngcc14 from './pipes/date_pipe';
import * as ɵngcc15 from './pipes/i18n_plural_pipe';
import * as ɵngcc16 from './pipes/i18n_select_pipe';
import * as ɵngcc17 from './pipes/keyvalue_pipe';
import * as ɵngcc18 from './pipes/deprecated/number_pipe';
import * as ɵngcc19 from './pipes/deprecated/date_pipe';
export class CommonModule {
}
CommonModule.ngModuleDef = ɵngcc0.ɵɵdefineNgModule({ type: CommonModule });
/*@__PURE__*/ ɵngcc0.ɵɵsetNgModuleScope(CommonModule, { declarations: [ɵngcc1.NgClass, ɵngcc2.NgComponentOutlet, ɵngcc3.NgForOf, ɵngcc4.NgIf, ɵngcc5.NgTemplateOutlet, ɵngcc6.NgStyle, ɵngcc7.NgSwitch, ɵngcc7.NgSwitchCase, ɵngcc7.NgSwitchDefault, ɵngcc8.NgPlural, ɵngcc8.NgPluralCase, ɵngcc9.AsyncPipe, ɵngcc10.UpperCasePipe, ɵngcc10.LowerCasePipe, ɵngcc11.JsonPipe, ɵngcc12.SlicePipe, ɵngcc13.DecimalPipe, ɵngcc13.PercentPipe, ɵngcc10.TitleCasePipe, ɵngcc13.CurrencyPipe, ɵngcc14.DatePipe, ɵngcc15.I18nPluralPipe, ɵngcc16.I18nSelectPipe, ɵngcc17.KeyValuePipe], exports: [ɵngcc1.NgClass, ɵngcc2.NgComponentOutlet, ɵngcc3.NgForOf, ɵngcc4.NgIf, ɵngcc5.NgTemplateOutlet, ɵngcc6.NgStyle, ɵngcc7.NgSwitch, ɵngcc7.NgSwitchCase, ɵngcc7.NgSwitchDefault, ɵngcc8.NgPlural, ɵngcc8.NgPluralCase, ɵngcc9.AsyncPipe, ɵngcc10.UpperCasePipe, ɵngcc10.LowerCasePipe, ɵngcc11.JsonPipe, ɵngcc12.SlicePipe, ɵngcc13.DecimalPipe, ɵngcc13.PercentPipe, ɵngcc10.TitleCasePipe, ɵngcc13.CurrencyPipe, ɵngcc14.DatePipe, ɵngcc15.I18nPluralPipe, ɵngcc16.I18nSelectPipe, ɵngcc17.KeyValuePipe] });
/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(CommonModule, [{
        type: NgModule,
        args: [{
                declarations: [COMMON_DIRECTIVES, COMMON_PIPES],
                exports: [COMMON_DIRECTIVES, COMMON_PIPES],
                providers: [
                    { provide: NgLocalization, useClass: NgLocaleLocalization },
                ]
            }]
    }], null, null);
CommonModule.ngInjectorDef = ɵngcc0.ɵɵdefineInjector({ factory: function CommonModule_Factory(t) { return new (t || CommonModule)(); }, providers: [
        { provide: NgLocalization, useClass: NgLocaleLocalization },
    ] });
const ɵ0 = getPluralCase;
/**
 * A module that contains the deprecated i18n pipes.
 *
 * @deprecated from v5
 * \@publicApi
 */
export class DeprecatedI18NPipesModule {
}
DeprecatedI18NPipesModule.ngModuleDef = ɵngcc0.ɵɵdefineNgModule({ type: DeprecatedI18NPipesModule });
/*@__PURE__*/ ɵngcc0.ɵɵsetNgModuleScope(DeprecatedI18NPipesModule, { declarations: [ɵngcc18.DeprecatedDecimalPipe, ɵngcc18.DeprecatedPercentPipe, ɵngcc18.DeprecatedCurrencyPipe, ɵngcc19.DeprecatedDatePipe], exports: [ɵngcc18.DeprecatedDecimalPipe, ɵngcc18.DeprecatedPercentPipe, ɵngcc18.DeprecatedCurrencyPipe, ɵngcc19.DeprecatedDatePipe] });
/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(DeprecatedI18NPipesModule, [{
        type: NgModule,
        args: [{
                declarations: [COMMON_DEPRECATED_I18N_PIPES],
                exports: [COMMON_DEPRECATED_I18N_PIPES],
                providers: [{ provide: DEPRECATED_PLURAL_FN, useValue: ɵ0 }]
            }]
    }], null, null);
DeprecatedI18NPipesModule.ngInjectorDef = ɵngcc0.ɵɵdefineInjector({ factory: function DeprecatedI18NPipesModule_Factory(t) { return new (t || DeprecatedI18NPipesModule)(); }, providers: [{ provide: DEPRECATED_PLURAL_FN, useValue: ɵ0 }] });
export { ɵ0 };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImM6L1VzZXJzL0hQL0Rlc2t0b3AvQjJCL2IyYi1wb3J0YWwvbm9kZV9tb2R1bGVzL0Bhbmd1bGFyL2NvbW1vbi9lc20yMDE1L3NyYy9jb21tb25fbW9kdWxlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUErQkE7Ozs7Ozs7Ozs7Ozs7Ozs7Q0FDQyxRQVNDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztDQVNELDhPQU9DIiwiZmlsZSI6ImNvbW1vbl9tb2R1bGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmaWxlb3ZlcnZpZXcgYWRkZWQgYnkgdHNpY2tsZVxuICogQHN1cHByZXNzIHtjaGVja1R5cGVzLGNvbnN0YW50UHJvcGVydHksZXh0cmFSZXF1aXJlLG1pc3NpbmdPdmVycmlkZSxtaXNzaW5nUmV0dXJuLHVudXNlZFByaXZhdGVNZW1iZXJzLHVzZWxlc3NDb2RlfSBjaGVja2VkIGJ5IHRzY1xuICovXG4vKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgR29vZ2xlIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2FuZ3VsYXIuaW8vbGljZW5zZVxuICovXG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ09NTU9OX0RJUkVDVElWRVMgfSBmcm9tICcuL2RpcmVjdGl2ZXMvaW5kZXgnO1xuaW1wb3J0IHsgREVQUkVDQVRFRF9QTFVSQUxfRk4sIE5nTG9jYWxlTG9jYWxpemF0aW9uLCBOZ0xvY2FsaXphdGlvbiwgZ2V0UGx1cmFsQ2FzZSB9IGZyb20gJy4vaTE4bi9sb2NhbGl6YXRpb24nO1xuaW1wb3J0IHsgQ09NTU9OX0RFUFJFQ0FURURfSTE4Tl9QSVBFUyB9IGZyb20gJy4vcGlwZXMvZGVwcmVjYXRlZC9pbmRleCc7XG5pbXBvcnQgeyBDT01NT05fUElQRVMgfSBmcm9tICcuL3BpcGVzL2luZGV4Jztcbi8vIE5vdGU6IFRoaXMgZG9lcyBub3QgY29udGFpbiB0aGUgbG9jYXRpb24gcHJvdmlkZXJzLFxuLy8gYXMgdGhleSBuZWVkIHNvbWUgcGxhdGZvcm0gc3BlY2lmaWMgaW1wbGVtZW50YXRpb25zIHRvIHdvcmsuXG4vKipcbiAqIEV4cG9ydHMgYWxsIHRoZSBiYXNpYyBBbmd1bGFyIGRpcmVjdGl2ZXMgYW5kIHBpcGVzLFxuICogc3VjaCBhcyBgTmdJZmAsIGBOZ0Zvck9mYCwgYERlY2ltYWxQaXBlYCwgYW5kIHNvIG9uLlxuICogUmUtZXhwb3J0ZWQgYnkgYEJyb3dzZXJNb2R1bGVgLCB3aGljaCBpcyBpbmNsdWRlZCBhdXRvbWF0aWNhbGx5IGluIHRoZSByb290XG4gKiBgQXBwTW9kdWxlYCB3aGVuIHlvdSBjcmVhdGUgYSBuZXcgYXBwIHdpdGggdGhlIENMSSBgbmV3YCBjb21tYW5kLlxuICpcbiAqICogVGhlIGBwcm92aWRlcnNgIG9wdGlvbnMgY29uZmlndXJlIHRoZSBOZ01vZHVsZSdzIGluamVjdG9yIHRvIHByb3ZpZGVcbiAqIGxvY2FsaXphdGlvbiBkZXBlbmRlbmNpZXMgdG8gbWVtYmVycy5cbiAqICogVGhlIGBleHBvcnRzYCBvcHRpb25zIG1ha2UgdGhlIGRlY2xhcmVkIGRpcmVjdGl2ZXMgYW5kIHBpcGVzIGF2YWlsYWJsZSBmb3IgaW1wb3J0XG4gKiBieSBvdGhlciBOZ01vZHVsZXMuXG4gKlxuICogXFxAcHVibGljQXBpXG4gKi9cbmV4cG9ydCBjbGFzcyBDb21tb25Nb2R1bGUge1xufVxuQ29tbW9uTW9kdWxlLmRlY29yYXRvcnMgPSBbXG4gICAgeyB0eXBlOiBOZ01vZHVsZSwgYXJnczogW3tcbiAgICAgICAgICAgICAgICBkZWNsYXJhdGlvbnM6IFtDT01NT05fRElSRUNUSVZFUywgQ09NTU9OX1BJUEVTXSxcbiAgICAgICAgICAgICAgICBleHBvcnRzOiBbQ09NTU9OX0RJUkVDVElWRVMsIENPTU1PTl9QSVBFU10sXG4gICAgICAgICAgICAgICAgcHJvdmlkZXJzOiBbXG4gICAgICAgICAgICAgICAgICAgIHsgcHJvdmlkZTogTmdMb2NhbGl6YXRpb24sIHVzZUNsYXNzOiBOZ0xvY2FsZUxvY2FsaXphdGlvbiB9LFxuICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICB9LF0gfVxuXTtcbmNvbnN0IMm1MCA9IGdldFBsdXJhbENhc2U7XG4vKipcbiAqIEEgbW9kdWxlIHRoYXQgY29udGFpbnMgdGhlIGRlcHJlY2F0ZWQgaTE4biBwaXBlcy5cbiAqXG4gKiBAZGVwcmVjYXRlZCBmcm9tIHY1XG4gKiBcXEBwdWJsaWNBcGlcbiAqL1xuZXhwb3J0IGNsYXNzIERlcHJlY2F0ZWRJMThOUGlwZXNNb2R1bGUge1xufVxuRGVwcmVjYXRlZEkxOE5QaXBlc01vZHVsZS5kZWNvcmF0b3JzID0gW1xuICAgIHsgdHlwZTogTmdNb2R1bGUsIGFyZ3M6IFt7XG4gICAgICAgICAgICAgICAgZGVjbGFyYXRpb25zOiBbQ09NTU9OX0RFUFJFQ0FURURfSTE4Tl9QSVBFU10sXG4gICAgICAgICAgICAgICAgZXhwb3J0czogW0NPTU1PTl9ERVBSRUNBVEVEX0kxOE5fUElQRVNdLFxuICAgICAgICAgICAgICAgIHByb3ZpZGVyczogW3sgcHJvdmlkZTogREVQUkVDQVRFRF9QTFVSQUxfRk4sIHVzZVZhbHVlOiDJtTAgfV0sXG4gICAgICAgICAgICB9LF0gfVxuXTtcbmV4cG9ydCB7IMm1MCB9O1xuIl19