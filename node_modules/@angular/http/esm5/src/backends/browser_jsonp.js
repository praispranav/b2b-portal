/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
var _nextRequestId = 0;
export var JSONP_HOME = '__ng_jsonp__';
var _jsonpConnections = null;
function _getJsonpConnections() {
    var w = typeof window == 'object' ? window : {};
    if (_jsonpConnections === null) {
        _jsonpConnections = w[JSONP_HOME] = {};
    }
    return _jsonpConnections;
}
// Make sure not to evaluate this in a non-browser environment!
var BrowserJsonp = /** @class */ (function () {
    function BrowserJsonp() {
    }
    // Construct a <script> element with the specified URL
    BrowserJsonp.prototype.build = function (url) {
        var node = document.createElement('script');
        node.src = url;
        return node;
    };
    BrowserJsonp.prototype.nextRequestID = function () { return "__req" + _nextRequestId++; };
    BrowserJsonp.prototype.requestCallback = function (id) { return JSONP_HOME + "." + id + ".finished"; };
    BrowserJsonp.prototype.exposeConnection = function (id, connection) {
        var connections = _getJsonpConnections();
        connections[id] = connection;
    };
    BrowserJsonp.prototype.removeConnection = function (id) {
        var connections = _getJsonpConnections();
        connections[id] = null;
    };
    // Attach the <script> element to the DOM
    BrowserJsonp.prototype.send = function (node) { document.body.appendChild((node)); };
    // Remove <script> element from the DOM
    BrowserJsonp.prototype.cleanup = function (node) {
        if (node.parentNode) {
            node.parentNode.removeChild((node));
        }
    };
BrowserJsonp.ngInjectableDef = ɵngcc0.ɵɵdefineInjectable({ token: BrowserJsonp, factory: function BrowserJsonp_Factory(t) { return new (t || BrowserJsonp)(); }, providedIn: null });
/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(BrowserJsonp, [{
        type: Injectable
    }], function () { return []; }, { build: [], nextRequestID: [], requestCallback: [], exposeConnection: [], removeConnection: [], send: [], cleanup: [] });
    return BrowserJsonp;
}());
export { BrowserJsonp };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImM6L1VzZXJzL0hQL0Rlc2t0b3AvQjJCL2IyYi1wb3J0YWwvbm9kZV9tb2R1bGVzL0Bhbmd1bGFyL2h0dHAvZXNtNS9zcmMvYmFja2VuZHMvYnJvd3Nlcl9qc29ucC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7OztBQVNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O01BcUNNOzs7OzhKQUdlIiwiZmlsZSI6ImJyb3dzZXJfanNvbnAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgR29vZ2xlIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2FuZ3VsYXIuaW8vbGljZW5zZVxuICovXG5pbXBvcnQgKiBhcyB0c2xpYl8xIGZyb20gXCJ0c2xpYlwiO1xuaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xudmFyIF9uZXh0UmVxdWVzdElkID0gMDtcbmV4cG9ydCB2YXIgSlNPTlBfSE9NRSA9ICdfX25nX2pzb25wX18nO1xudmFyIF9qc29ucENvbm5lY3Rpb25zID0gbnVsbDtcbmZ1bmN0aW9uIF9nZXRKc29ucENvbm5lY3Rpb25zKCkge1xuICAgIHZhciB3ID0gdHlwZW9mIHdpbmRvdyA9PSAnb2JqZWN0JyA/IHdpbmRvdyA6IHt9O1xuICAgIGlmIChfanNvbnBDb25uZWN0aW9ucyA9PT0gbnVsbCkge1xuICAgICAgICBfanNvbnBDb25uZWN0aW9ucyA9IHdbSlNPTlBfSE9NRV0gPSB7fTtcbiAgICB9XG4gICAgcmV0dXJuIF9qc29ucENvbm5lY3Rpb25zO1xufVxuLy8gTWFrZSBzdXJlIG5vdCB0byBldmFsdWF0ZSB0aGlzIGluIGEgbm9uLWJyb3dzZXIgZW52aXJvbm1lbnQhXG52YXIgQnJvd3Nlckpzb25wID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIEJyb3dzZXJKc29ucCgpIHtcbiAgICB9XG4gICAgLy8gQ29uc3RydWN0IGEgPHNjcmlwdD4gZWxlbWVudCB3aXRoIHRoZSBzcGVjaWZpZWQgVVJMXG4gICAgQnJvd3Nlckpzb25wLnByb3RvdHlwZS5idWlsZCA9IGZ1bmN0aW9uICh1cmwpIHtcbiAgICAgICAgdmFyIG5vZGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzY3JpcHQnKTtcbiAgICAgICAgbm9kZS5zcmMgPSB1cmw7XG4gICAgICAgIHJldHVybiBub2RlO1xuICAgIH07XG4gICAgQnJvd3Nlckpzb25wLnByb3RvdHlwZS5uZXh0UmVxdWVzdElEID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gXCJfX3JlcVwiICsgX25leHRSZXF1ZXN0SWQrKzsgfTtcbiAgICBCcm93c2VySnNvbnAucHJvdG90eXBlLnJlcXVlc3RDYWxsYmFjayA9IGZ1bmN0aW9uIChpZCkgeyByZXR1cm4gSlNPTlBfSE9NRSArIFwiLlwiICsgaWQgKyBcIi5maW5pc2hlZFwiOyB9O1xuICAgIEJyb3dzZXJKc29ucC5wcm90b3R5cGUuZXhwb3NlQ29ubmVjdGlvbiA9IGZ1bmN0aW9uIChpZCwgY29ubmVjdGlvbikge1xuICAgICAgICB2YXIgY29ubmVjdGlvbnMgPSBfZ2V0SnNvbnBDb25uZWN0aW9ucygpO1xuICAgICAgICBjb25uZWN0aW9uc1tpZF0gPSBjb25uZWN0aW9uO1xuICAgIH07XG4gICAgQnJvd3Nlckpzb25wLnByb3RvdHlwZS5yZW1vdmVDb25uZWN0aW9uID0gZnVuY3Rpb24gKGlkKSB7XG4gICAgICAgIHZhciBjb25uZWN0aW9ucyA9IF9nZXRKc29ucENvbm5lY3Rpb25zKCk7XG4gICAgICAgIGNvbm5lY3Rpb25zW2lkXSA9IG51bGw7XG4gICAgfTtcbiAgICAvLyBBdHRhY2ggdGhlIDxzY3JpcHQ+IGVsZW1lbnQgdG8gdGhlIERPTVxuICAgIEJyb3dzZXJKc29ucC5wcm90b3R5cGUuc2VuZCA9IGZ1bmN0aW9uIChub2RlKSB7IGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoKG5vZGUpKTsgfTtcbiAgICAvLyBSZW1vdmUgPHNjcmlwdD4gZWxlbWVudCBmcm9tIHRoZSBET01cbiAgICBCcm93c2VySnNvbnAucHJvdG90eXBlLmNsZWFudXAgPSBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICBpZiAobm9kZS5wYXJlbnROb2RlKSB7XG4gICAgICAgICAgICBub2RlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoKG5vZGUpKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgQnJvd3Nlckpzb25wID0gdHNsaWJfMS5fX2RlY29yYXRlKFtcbiAgICAgICAgSW5qZWN0YWJsZSgpXG4gICAgXSwgQnJvd3Nlckpzb25wKTtcbiAgICByZXR1cm4gQnJvd3Nlckpzb25wO1xufSgpKTtcbmV4cG9ydCB7IEJyb3dzZXJKc29ucCB9O1xuIl19